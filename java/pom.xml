<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>youkaiyashikiextractor</groupId>
	<artifactId>youkaiyashikiextractor</artifactId>
	<version>1.0</version>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<mainClass>youkaiyashikiextractor.YoukaiYashikiExtractorApp</mainClass>

		<commons-cli.version>1.4</commons-cli.version>
		<commons-lang3.version>3.11</commons-lang3.version>
		<commons-io.version>2.8.0</commons-io.version>
		<junit.version>4.13.1</junit.version>
		<logback.version>1.2.3</logback.version>

		<maven-enforcer-plugin.version>3.0.0-M3</maven-enforcer-plugin.version>
		<extra-enforcer-rules.version>1.3</extra-enforcer-rules.version>
		<maven-shade-plugin.version>3.2.4</maven-shade-plugin.version>
		<versions-maven-plugin.version>2.7</versions-maven-plugin.version>
		<modernizer-maven-plugin.version>2.1.0</modernizer-maven-plugin.version>
		<spotbugs-maven-plugin.version>4.0.4</spotbugs-maven-plugin.version>
		<spotbugs.version>4.1.3</spotbugs.version>
	</properties>

	<dependencies>

		<!-- Apache Commons -->
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>${commons-cli.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>

		<!-- Logback (classic module) -->
		<!-- <dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency> -->

		<!-- JUnit -->
		<!-- <dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency> -->

	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>

		<plugins>

			<!-- Enforces certain Maven versions and dependencies bytecode version -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${maven-enforcer-plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>extra-enforcer-rules</artifactId>
						<version>${extra-enforcer-rules.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>3.2.5</version>
								</requireMavenVersion>
								<enforceBytecodeVersion>
									<maxJdkVersion>${maven.compiler.target}</maxJdkVersion>
								</enforceBytecodeVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Package the artifact in an uber-jar, including its dependencies -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>${maven-shade-plugin.version}</version>
				<executions>
					<execution>
						<id>shade</id>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<createDependencyReducedPom>false</createDependencyReducedPom>
								<filters>
									<filter>
										<artifact>*:*</artifact>
										<excludes>
											<exclude>META-INF/MANIFEST.MF</exclude>
										</excludes>
									</filter>
								</filters>
								<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ApacheNoticeResourceTransformer">
									<addHeader>false</addHeader>
								</transformer>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ApacheLicenseResourceTransformer" />
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>${mainClass}</mainClass>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Displays all dependencies and plugins that have newer versions available -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>${versions-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>display-dependency-updates</id>
						<phase>verify</phase>
						<goals>
							<goal>display-dependency-updates</goal>
						</goals>
					</execution>
					<execution>
						<id>display-plugin-updates</id>
						<phase>verify</phase>
						<goals>
							<goal>display-plugin-updates</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Detects uses of legacy APIs which modern Java versions supersede -->
			<plugin>
				<groupId>org.gaul</groupId>
				<artifactId>modernizer-maven-plugin</artifactId>
				<version>${modernizer-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>modernizer</id>
						<phase>verify</phase>
						<goals>
							<goal>modernizer</goal>
						</goals>
						<configuration>
							<javaVersion>${maven.compiler.target}</javaVersion>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Find bugs in Java programs -->
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>${spotbugs-maven-plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>com.github.spotbugs</groupId>
						<artifactId>spotbugs</artifactId>
						<version>${spotbugs.version}</version>
					</dependency>
				</dependencies>
  				<executions>
					<execution>
						<id>spotbugs-spotbugs</id>
						<phase>verify</phase>
						<goals>
							<goal>spotbugs</goal>
						</goals>
					</execution>
					<execution>
						<id>spotbugs-check</id>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>
